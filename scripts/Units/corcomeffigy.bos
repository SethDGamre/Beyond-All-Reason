#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece torso, lfirept, rbigflash, nanospray, nanolathe, luparm, ruparm, pelvis,
    rthigh, lthigh, biggun, lleg, l_foot, rleg, r_foot, head, teleport, aimx1, aimy1, nanol1, nanol2, nanol3, leye, reye, cagelight, cagelight_emit, hatpoint, crown, medalsilver, medalbronze, medalgold;

static-var bMoving, bAiming, Busy, gun_3, gun_2, counter,
      bIsBuilding, buildPitch, buildHeading, maxSpeed, currentSpeed, animSpeed, justMoved, shotcount;

// for the AimPrimary script, to skip wait-for-turn if needed
static-var last_primary_heading,last_primary_pitch;

// Signal definitions
#define SIG_AIM				2
#define SIG_WALK            4
//corcom travels at 40 elmos per  sec (30 frames)
//if his animation loops in 8*8 = 64 frames
//then he has to travel 85 elmos in a loop
// e.g. 10.5 elmos per keyframe
// Generated for D:\spring\animation\corcom_anim_walk_v4.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var animFramesPerKeyframe;

UnitSpeed(){
 maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
 animFramesPerKeyframe = 6; //we need to calc the frames per keyframe value, from the known animtime
 maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
 while(TRUE){
  animSpeed = (get CURRENT_SPEED);
  if (animSpeed<1) animSpeed=1;
  animSpeed = 1 + (maxSpeed * 6) / animSpeed; 
  //get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed);
  if (animSpeed<3) animSpeed=3;
  if (animspeed>12) animSpeed = 12;
  //animSpeed = 1;
  sleep 197;
 }
}




Create()
{
	hide rbigflash;
	hide nanospray;
	hide aimx1;
	hide hatpoint;
	hide aimy1;
	hide teleport;
	hide rbigflash;
	hide lfirept;
	hide cagelight_emit;
	
	hide crown;
	hide medalgold;
	hide medalsilver;
	hide medalbronze;

	move crown to y-axis [100] speed [9999];
	move medalgold to y-axis [100] speed [9999];
	move medalsilver to y-axis [100] speed [9999];
	move medalgold to y-axis [100] speed [9999];

	shotcount = 0;
	bMoving = FALSE;
	bAiming = FALSE;
	bIsBuilding = FALSE;
	gun_2 = torso;
	Busy = 1;
	gun_3 = torso;
	buildHeading = 0;
	buildPitch = 0;
	counter = 0;
	// set last headings and pitches to large negative numbers
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
	//maxSpeed = get UNKNOWN_UNIT_VALUE(75);
	maxSpeed = get MAX_SPEED;
	animSpeed = 6;
	currentSpeed = 100;
	//call-script TeleportControl();
	start-script UnitSpeed();
}

lua_UnitScriptLight(lightIndex, count) 
{
	return 0;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed( severity, corpsetype )
{
	corpsetype = 1;
	return(corpsetype);
}